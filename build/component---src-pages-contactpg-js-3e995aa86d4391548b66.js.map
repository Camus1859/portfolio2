{"version":3,"sources":["webpack:///./src/pages/contactpg.js"],"names":["ContactPage","images","data","contactImages","edges","map","image","key","node","base","href","imageName","includes","target","className","fluid","childImageSharp"],"mappings":"6FAAA,iEAyCeA,UArBK,SAAC,GAAc,IAC3BC,EAD0B,EAAXC,KACDC,cAAcC,MAAMC,KAAI,SAAAC,GAC1C,OACE,uBAAGC,IAAKD,EAAME,KAAKC,KAAMC,MAlBFC,EAkB6BL,EAAME,KAAKC,KAjB/DE,EAAUC,SAAS,WACd,kCAELD,EAAUC,SAAS,YACd,0DAELD,EAAUC,SAAS,SACd,iCAELD,EAAUC,SAAS,UACd,oCADT,GAQ0EC,OAAO,UAC3E,kBAAC,IAAD,CACEC,UAAU,uIACVC,MAAOT,EAAME,KAAKQ,gBAAgBD,SArBf,IAAAJ,KA2B3B,OACE,kBAAC,IAAD,KACE,yBAAKG,UAAU,yFACZb","file":"component---src-pages-contactpg-js-3e995aa86d4391548b66.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst determineIconClicked = imageName => {\n  if (imageName.includes(\"twitter\")) {\n    return \"https://twitter.com/Laventure00\"\n  }\n  if (imageName.includes(\"linkedin\")) {\n    return \"https://www.linkedin.com/in/anderson-laventure-a1ab0374\"\n  }\n  if (imageName.includes(\"gmail\")) {\n    return \"mailto:laventurepsu1@gmail.com\"\n  }\n  if (imageName.includes(\"github\")) {\n    return \"https://github.com/Camus1859\"\n  }\n}\n\nconst ContactPage = ({ data }) => {\n  const images = data.contactImages.edges.map(image => {\n    return (\n      <a key={image.node.base} href={determineIconClicked(image.node.base)} target=\"_blank\">\n        <Img\n          className=\"  h-28 w-28 bg-gray-200 rounded-full transition duration-500 ease-in-out   transform hover:-translate-y-1 hover:scale-110 shadow-2xl\"\n          fluid={image.node.childImageSharp.fluid}\n        />\n      </a>\n    )\n  })\n\n  return (\n    <Layout>\n      <div className=\" mt-36 relative h-4/6 flex-col flex items-center lg:flex   lg:justify-evenly w-full  \">\n        {images}\n      </div>\n    </Layout>\n  )\n}\n\nexport default ContactPage\n\nexport const pageQuery = graphql`\n  query {\n    contactImages: allFile(\n      filter: { relativeDirectory: { eq: \"contactImages\" } }\n    ) {\n      edges {\n        node {\n          id\n          base\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}