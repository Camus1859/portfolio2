{"version":3,"sources":["webpack:///./src/pages/projectspg.js"],"names":["ProjectsPage","images","data","projectImages","edges","map","image","key","node","base","className","split","toUpperCase","fluid","childImageSharp","imageName","includes","checkImageAddDescription","onClick","window","open"],"mappings":"2FAAA,iEA4GeA,UAxCM,SAAC,GAAc,IAC5BC,EAD2B,EAAXC,KACFC,cAAcC,MAAMC,KAAI,SAAAC,GAC1C,OACE,yBAAKC,IAAKD,EAAME,KAAKC,KAAMC,UAAU,gEACnC,uBAAGA,UAAU,0FACV,IACAJ,EAAME,KAAKC,KAAKE,MAAM,KAAK,GAAGC,eAGjC,kBAAC,IAAD,CACEF,UAAU,wDACVG,MAAOP,EAAME,KAAKM,gBAAgBD,QAEpC,uBAAGH,UAAU,+FA5EY,SAAAK,GAE/B,GAAIA,EAAUC,SAAS,YAAa,CAGlC,MADE,sIAIJ,GAAID,EAAUC,SAAS,WAAY,CAGjC,MADE,kFAIJ,GAAID,EAAUC,SAAS,OAAQ,CAG7B,MADE,6FAIJ,GAAID,EAAUC,SAAS,QAAS,CAG9B,MADE,4JAuDKC,CAAyBX,EAAME,KAAKC,OAEvC,yBAAKC,UAAU,iGACb,4BACEA,UAAU,+LACVQ,QAAS,kBAvDMH,EAuDmBT,EAAME,KAAKC,MAtDzCO,SAAS,YACdG,OAAOC,KAAK,uCAAwC,UAGzDL,EAAUC,SAAS,WACdG,OAAOC,KAAK,sCAAuC,UAGxDL,EAAUC,SAAS,OACdG,OAAOC,KAAK,0CAA2C,UAG5DL,EAAUC,SAAS,QACdG,OAAOC,KAAK,mCAAoC,eADzD,EAbyB,IAAAL,IAqDjB,gBAMA,4BACEL,UAAU,oMACVQ,QAAS,kBA3CMH,EA2CmBT,EAAME,KAAKC,MA1CzCO,SAAS,YACdG,OAAOC,KAAK,yCAGjBL,EAAUC,SAAS,WACdG,OAAOC,KAAK,wCAGjBL,EAAUC,SAAS,OACdG,OAAOC,KAAK,4CAGjBL,EAAUC,SAAS,QACdG,OAAOC,KAAK,0CADrB,EAbyB,IAAAL,IAyCjB,kBAUR,OACE,kBAAC,IAAD,KACE,yBAAKL,UAAU,mBAAmBT","file":"component---src-pages-projectspg-js-cfb856f4874f79d26ff1.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst checkImageAddDescription = imageName => {\n  \n  if (imageName.includes(\"calendar\")) {\n    const description =\n      \"I created my own algorithim for calendars functionality. User can add, delete, and edit an event. View all events of current month.\"\n    return description\n  }\n\n  if (imageName.includes(\"library\")) {\n    const description =\n      \"User can add, delete, and toggle if book is read. Books saved to local storage.\"\n    return description\n  }\n\n  if (imageName.includes(\"tic\")) {\n    const description =\n      \"Two player game. Keeps track of the winner. Able to restart game from any point Adding AI.\"\n    return description\n  }\n\n  if (imageName.includes(\"todo\")) {\n    const description =\n      \"Create todo, place them into different list, edit, and delete. Create new task from popup. Mark task as finished. View all todo's in a given time-frame.\"\n    return description\n  }\n}\n\nconst viewSiteBtnClicked = imageName => {\n  if (imageName.includes(\"calendar\")) {\n    return window.open(\"http://camus1859.github.io/calendar/\", \"_blank\")\n  }\n\n  if (imageName.includes(\"library\")) {\n    return window.open(\"http://camus1859.github.io/library/\", \"_blank\")\n  }\n\n  if (imageName.includes(\"tic\")) {\n    return window.open(\"http://camus1859.github.io/tic-tac-toe/\", \"_blank\")\n  }\n\n  if (imageName.includes(\"todo\")) {\n    return window.open(\"http://camus1859.github.io/todo/\", \"_blank\")\n  }\n}\n\nconst viewCodeBtnClicked = imageName => {\n  if (imageName.includes(\"calendar\")) {\n    return window.open(\"https://github.com/Camus1859/calendar\")\n  }\n\n  if (imageName.includes(\"library\")) {\n    return window.open(\"https://github.com/Camus1859/library\")\n  }\n\n  if (imageName.includes(\"tic\")) {\n    return window.open(\"https://github.com/Camus1859/tic-tac-toe\")\n  }\n\n  if (imageName.includes(\"todo\")) {\n    return window.open(\"https://github.com/Camus1859/todo\")\n  }\n}\n\nconst ProjectsPage = ({ data }) => {\n  const images = data.projectImages.edges.map(image => {\n    return (\n      <div key={image.node.base} className=\" flex-col flex items-center mt-14  text-gray-100 text-center\">\n        <p className=\" h-5/5\t w-4/5 bg-gray-50 text-gray-900 lg:h-4/5 lg:w-3/5 md:h-5/5\t md:w-4/5 relative\">\n          {\" \"}\n          {image.node.base.split(\".\")[0].toUpperCase()}\n        </p>\n\n        <Img\n          className=\"h-5/5 \t w-4/5 md:h-5/5\t md:w-4/5 lg:h-3/5 lg:w-3/5 \"\n          fluid={image.node.childImageSharp.fluid}\n        />\n        <p className=\"  relative h-5/5\t w-4/5 bg-gray-50 text-gray-900  md:h-5/5\t md:w-4/5 lg:h-4/5 lg:w-3/5\t \">\n          {checkImageAddDescription(image.node.base)}\n        </p>\n        <div className=\" relative flex justify-around h-5/5 lg:h-4/5 lg:w-3/5\t w-4/5 bg-gray-50 md:h-5/5\t md:w-4/5 \">\n          <button\n            className=\" relative bg-blue-900 p-4 font-bold border-none no-underline focus:outline-none\toutline-none\tshadow-2xl rounded-2xl transform hover:-translate-y-1 hover:scale-110 m-4 hover:bg-blue-500  \"\n            onClick={() => viewSiteBtnClicked(image.node.base)}\n          >\n            VIEW PROJECT\n          </button>\n          <button\n            className=\" relative m-4\tbg-purple-900 p-4 font-bold border-none no-underline\toutline-none\t\trounded-2xl focus:outline-none shadow-2xl transform hover:-translate-y-1 hover:scale-110 hover:bg-purple-500\"\n            onClick={() => viewCodeBtnClicked(image.node.base)}\n          >\n            VIEW CODE\n          </button>\n        </div>\n      </div>\n    )\n  })\n  return (\n    <Layout>\n      <div className=\"images md:mt-32\">{images}</div>\n    </Layout>\n  )\n}\n\nexport default ProjectsPage\n\nexport const pageQuery = graphql`\n  query {\n    projectImages: allFile(\n      filter: { relativeDirectory: { eq: \"projectImages\" } }\n      sort: { fields: base, order: ASC }\n    ) {\n      edges {\n        node {\n          id\n          base\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}